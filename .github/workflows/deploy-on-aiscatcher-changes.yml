---
name: Deploy on aiscatcher changes

on:
  schedule:
      - cron: "*/30 * * * *"

# Set workflow-wide environment variables
#  - REPO: repo name on dockerhub
#  - IMAGE: image name on dockerhub
env:
#  DOCKERHUB_REPO: sdr-enthusiasts
#  DOCKERHUB_IMAGE: shipxplorer
  GHCR_IMAGE: sdr-enthusiasts/shipxplorer
  GHCR_REGISTRY: ghcr.io

jobs:

  hadolint:
    name: Run hadolint against docker files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3015 --ignore DL3003 --ignore DL3006 --ignore DL3010 --ignore DL4001 --ignore DL3007 --ignore DL3008 --ignore SC2068 --ignore DL3007 --ignore SC1091 --ignore DL3013 --ignore DL3010 $(find . -type f -iname "Dockerfile*")

  deploy_ghcr_multiarch:
    name: Deploy ghcr.io (Multi-Arch)
    needs: [hadolint]
    runs-on: ubuntu-latest
    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Check if update available
        id: check
        uses: giggio/docker-image-update-checker@v2
        with:
          base-image: ghcr.io/jvde-github/ais-catcher:edge
          image: ghcr.io/sdr-enthusiasts/shipxplorer

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: steps.baseupdatecheck.outputs.needs-updating == 'true'
      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
        if: steps.baseupdatecheck.outputs.needs-updating == 'true'

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.baseupdatecheck.outputs.needs-updating == 'true'

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        if: steps.baseupdatecheck.outputs.needs-updating == 'true'

      # Build "latest"
      - name: Build & Push - latest
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          no-cache: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/i386
          push: true
          tags: ghcr.io/${{ env.GHCR_IMAGE }}:latest
          labels: ${{ steps.meta.outputs.labels }}
        if: steps.baseupdatecheck.outputs.needs-updating == 'true'
